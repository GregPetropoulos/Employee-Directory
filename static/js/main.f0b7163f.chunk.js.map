{"version":3,"sources":["components/EmployeeTable/index.js","components/SearchForm/index.js","utils/API.js","components/EmployeeContainer/index.js","components/Header/index.js","App.js","index.js"],"names":["EmployeeTable","props","className","scope","data-name","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","name","first","last","firstAndLastName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","SearchForm","onSubmit","handleFormSubmit","value","onChange","handleInputChange","type","placeholder","axios","get","EmployeeContainer","search","employees","sortDir","initialSortDir","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedStaff","reverse","sort","a","b","localeCompare","data","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","API","then","res","results","catch","err","console","log","this","Component","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0b7163f.chunk.js","sourcesContent":["import React from \"react\";\n// import \"./style.css\"\n\n// Set table with columns and rows, pass props, return the table with sorts\nconst EmployeeTable = (props) => {\n  return (\n    <table className=\"table table-dark table-striped table-hover text-center table-sortable\">\n      {/* header of table */}\n      <thead>\n        <tr>\n          <th scope=\"col\">Image</th>\n          \n          <th scope=\"col\" data-name=\"name\" data-sortable=\"true\">\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n              Name\n            </span>\n          </th>\n\n          <th scope=\"col\"><span onClick={() => props.sortBy(\"phone\")}>Phone</span></th>\n\n          <th scope = \"col\"><span onClick ={() => props.sortBy(\"email\")}>Email</span></th>\n\n          <th scope =\"col\"><span onClick ={() => props.sortBy(\"dob\",\"date\")}>DOB</span></th>\n        </tr>\n      </thead>\n\n\n      {/* body of table */}\n      <tbody>\n        {/* CREATE A NEW ARRAY OF FIRST AND LAST NAMES */}\n        {props.state.filteredEmployees.map((employee) => {\n          const {first, last} = employee.name;\n          const firstAndLastName = `${first} ${last}`;\n\n          // FORMAT THE DOB DATE\n          const dob= props.formatDate(employee.dob.date)\n\n          return (\n            <tr key ={employee.login.uuid}>\n              <td>\n                <img src = {employee.picture.thumbnail} alt={firstAndLastName}/>\n              </td>\n              <td className =\"align-middle\">{firstAndLastName}</td>\n              <td className =\"align-middle\">\n                <a href={`tel:+1${employee.phone}`}>{employee.phone}</a>\n              </td>\n              <td className = \"align-middle email\">\n                <a href={`mailto:${employee.email}`}>{employee.email}</a>\n              </td>\n              <td className ='align-middle'>{dob}</td>\n              </tr>  \n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default EmployeeTable;\n","import React from \"react\";\n\nconst SearchForm = (props) => {\n\n    return(\n        <nav className=\"navbar navbar-danger bg-danger justify-content-center\">\n            <form className = \"form-inline m-2\" onSubmit={props.handleFormSubmit}>\n                <input\n                className =\"form-control\"\n                value ={props.value}\n                name=\"search\"\n                onChange={props.handleInputChange}\n                type=\"search\"\n                placeholder='Search'\n                />\n            </form>\n\n\n        </nav>\n    )\n\n}\n\n    \nexport default SearchForm;\n","import axios from \"axios\";\n\n// CONST VARIABLE OF 150 RANDOM USERS\nconst URL = 'https://randomuser.me/api/?results=150&nat=us'\n\n/* eslint-disable-next-line */\nexport default{\n  searchEmployees: function() {\n    return axios.get(URL);\n  }\n}\n\n// Throws error see below for the fix if needed:\n// /* eslint import/no-anonymous-default-export: [2, {\"allowAnonymousClass\": true}] */\n// export default class {}","import React, { Component } from \"react\";\n\nimport EmployeeTable from \"../EmployeeTable\";\nimport SearchForm from \"../SearchForm\";\nimport API from \"../../utils/API\";\n\nclass EmployeeContainer extends Component {\n  state = {\n  search: \"\",\n  employees:[],\n  filteredEmployees: [],\n  sortDir: this.initialSortDir,\n  };\n\n  // SORTING EACH COLUMN DIRECTIONALLY\n  get initialSortDir(){\n    return{\n      name:\"\",\n      phone:\"\",\n      email:\"\",\n      dob:\"\",\n    }\n  };\n\n  // When this component mounts, call the api 'https://randomuser.me/api/?results=150'\n  componentDidMount() {\n    API.searchEmployees ()\n        .then((res) => this.setState({ \n          employees: res.data.results,\n          filteredEmployees: res.data.results \n        })\n        )\n        .catch((err) => console.log(err));\n      }\n\n\n\n// UPDATE THE SEARCH VALUE IN STATE TO FILTER BY EMPLOYEE NAME\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({ search: value });\n    this.filterEmployees(value.toLowerCase().trim());\n  };\n  \n    // When the form is submitted, search the  API for the value of `this.state.search`\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  // SORTING ENGINE--using a key of specific object\n  sortBy =(key, primary = 0, secondary = 0) => {\n    let sortedStaff = this.state.filteredEmployees;\n    if(this.state.sortDir[key]) {\n      this.setState({\n        filteredEmployees: sortedStaff.reverse(),\n        sortDir:{\n          ...this.initialSortDir,\n          [key]: this.state.sortDir[key] === \"asc\"? \"desc\": \"asc\",\n        },\n      });\n  } else {\n    sortedStaff =this.state.filteredEmployees.sort((a,b) => {\n      a = a[key];\n      b = b[key];\n\n      // if secondary and primary are ===, \n      // such as sorting by last name and they are the same, then sort by first name instead\n\n      if(primary){\n        if(secondary && a[primary] === b[primary]) {\n          return a[secondary].localeCompare(b[secondary]);\n        }\n        return a[primary].localeCompare(b[primary]);\n      } else {\n        return a.localeCompare(b);\n      }\n    });\n  \n  this.setState({filteredEmployees: sortedStaff,\n                 sortDir:{...this.initialSortDir, [key]: \"asc\",\n                          },\n                });\n              }\n            };\n\n  // A FX THAT RETURNS A NEW ARRAY WITH FILTER METHOD AND UPDATES STATE\n  filterEmployees =(data) => {\n    if (data) {\n      this.setState({\n        filteredEmployees: this.state.employees.filter((employee) => {\n          return (\n            employee.name.first\n            .toLowerCase()\n            .concat(\" \", employee.name.last.toLowerCase())\n            .includes(data) ||\n            employee.phone.includes(data) ||\n            employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(data) ||\n            employee.email.includes(data) ||\n            this.formatDate(employee.dob.date).includes(data)\n              );\n            }),\n          });\n        } else{ \n        this.setState({filteredEmployees: this.state.employees});\n      }\n    };\n  \nformatDate = (date) => {\n  date = new Date(date);\n  let dob =[];\n  dob.push(('0'+ (date.getMonth() + 1)).slice(-2));\n  dob.push(('0'+ date.getDate()).slice(-2));\n  dob.push(date.getFullYear());\n\n  // Join the formatted date with dash delimeter\n  return dob.join(\"-\");\n  }\n  \n\n\n  render() {\n     return (\n       <>\n       <SearchForm\n       value={this.state.search}\n       handleInputChange ={this.handleInputChange}\n       handleFormSubmit ={this.handleFormSubmit}\n       />\n       <div className = 'container mt'>\n         <EmployeeTable\n         state={this.state}\n         sortBy={this.sortBy}\n         filteredEmployees={this.filterEmployees}\n         formatDate={this.formatDate}\n        />\n         </div>\n       </>\n    );\n  }\n}\n\nexport default EmployeeContainer;\n","import React from 'react';\nimport \"./styles.css\";\n\nconst Header = () => {\n    return(\n        <header>\n            <h1 className=\"text-center\">Employee Directory</h1>\n            <p className='text-center'>\n                Click on columns to filter by heading \n                or use the search box to narrow your results\n            </p>\n        </header>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport EmployeeContainer from \"./components/EmployeeContainer\";\nimport Header from \"./components/Header\";\nfunction App() {\n  return(\n  <>\n  <Header/>\n  <EmployeeContainer />\n  </>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}